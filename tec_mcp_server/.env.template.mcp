# TEC MCP Server Configuration
# The Asimov Engine - Sovereign Intelligence Configuration

# =============================================================================
# OPERATION MODE
# =============================================================================
# Server mode: 'flask' for HTTP API, 'mcp' for Model Context Protocol
TEC_MODE=flask

# =============================================================================
# REQUIRED: API KEYS
# =============================================================================
# Azure OpenAI API Key (Required for intelligence functions)
AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here

# ElevenLabs API Key (Required for audio processing)
ELEVENLABS_API_KEY=your_elevenlabs_api_key_here

# =============================================================================
# AZURE OPENAI CONFIGURATION
# =============================================================================
# Azure OpenAI endpoint URL
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/

# Azure OpenAI model deployment name
AZURE_OPENAI_MODEL=gpt-4

# Azure OpenAI API version
AZURE_OPENAI_API_VERSION=2024-02-01

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server host (Flask mode only)
TEC_HOST=0.0.0.0

# Server port (Flask mode only)
TEC_PORT=5000

# Debug mode
TEC_DEBUG=false

# Environment mode
TEC_ENVIRONMENT=development

# =============================================================================
# SECURITY
# =============================================================================
# Encryption key for sensitive data
ENCRYPTION_KEY=tec_encryption_key_axiom_guardian_digital_cathedral

# JWT secret for authentication (if implemented)
JWT_SECRET=tec_jwt_secret_sovereign_intelligence

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database URL (SQLite for development, PostgreSQL for production)
DATABASE_URL=sqlite:///tec_memory.db

# PostgreSQL settings (uncomment for production)
# DATABASE_URL=postgresql://username:password@localhost:5432/tec_memory
# POSTGRES_DB=tec_memory
# POSTGRES_USER=tec_user
# POSTGRES_PASSWORD=secure_password
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432

# =============================================================================
# LOGGING
# =============================================================================
# Log level
LOG_LEVEL=INFO

# Log format
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# =============================================================================
# TEC SPECIFIC PATHS
# =============================================================================
# Path to TEC assets directory
TEC_ASSETS_PATH=../assets

# Path to TEC memory directory
TEC_MEMORY_PATH=./memory

# Path to TEC lore files
TEC_LORE_PATH=./lore

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Maximum workers for Gunicorn (production)
WORKERS=4

# Request timeout (seconds)
TIMEOUT=120

# Maximum file upload size (MB)
MAX_UPLOAD_SIZE=100

# =============================================================================
# AXIOM ENGINE CONFIGURATION
# =============================================================================
# Minimum axiom validation score (0.0 to 1.0)
MIN_AXIOM_SCORE=0.6

# Enable axiom validation caching
AXIOM_CACHE_ENABLED=true

# =============================================================================
# MEMORY CORE CONFIGURATION
# =============================================================================
# Enable semantic search
SEMANTIC_SEARCH_ENABLED=true

# Maximum search results
MAX_SEARCH_RESULTS=10

# Memory core cache size
MEMORY_CACHE_SIZE=1000

# =============================================================================
# TOOL ORCHESTRATOR CONFIGURATION
# =============================================================================
# Enable external tool discovery
ENABLE_EXTERNAL_TOOLS=true

# Tool execution timeout (seconds)
TOOL_TIMEOUT=300

# Maximum concurrent tool executions
MAX_CONCURRENT_TOOLS=5

# =============================================================================
# MONITORING & HEALTH CHECKS
# =============================================================================
# Health check interval (seconds)
HEALTH_CHECK_INTERVAL=30

# Enable metrics collection
METRICS_ENABLED=true

# Metrics export endpoint
METRICS_ENDPOINT=/metrics

# =============================================================================
# DOCKER MCP SPECIFIC
# =============================================================================
# MCP protocol version
MCP_PROTOCOL_VERSION=1.0

# Enable MCP resource streaming
MCP_STREAMING_ENABLED=true

# Maximum MCP message size (bytes)
MCP_MAX_MESSAGE_SIZE=10485760

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================
# Enable development features
DEV_MODE=true

# Enable test endpoints
TEST_ENDPOINTS_ENABLED=true

# Mock external services in development
MOCK_EXTERNAL_SERVICES=false
